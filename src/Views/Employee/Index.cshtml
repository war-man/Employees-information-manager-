@model EmployeesInformationManager.Proxies.EmployeeModelView

@{
    var formAction = "Edit";
    var buttonValue = "Save";
    var formTitle = "Edit User Data";
    if(@Model.Id <= 0)
    {
        formAction = buttonValue = "Create";
        formTitle = "Add new user";
    }
    ViewData["Title"] = formAction;
}

<h4>@formTitle</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="@formAction">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @if(@Model.Id > 0)
            {    
                <input type="hidden" asp-for="Id" />
            }
            <div class="form-group">
                <label asp-for="FullName" class="control-label"></label>
                <input asp-for="FullName" class="form-control" />
                <span asp-validation-for="FullName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EmployeeSkills" class="control-label">Skills</label>
                <input asp-for="EmployeeSkills" type="text" 
                class="tagator form-control" value="@Model.EmployeeSkills"
                data-tagator-show-all-options-on-focus="true" 
                data-tagator-autocomplete="@Model.SuggestedSkills">
            </div>
            <div class="form-group">
                <input type="submit" value="@buttonValue" class="btn btn-primary" />
                @if(@Model.Id > 0)
                {    
                    <a class = "btn btn-secondary" asp-action="Index">Cancel</a>
                }
            </div>
        </form>
    </div>
</div>

<hr />
<h4>All users</h4>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FullName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Employees) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
